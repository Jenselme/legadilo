name: CI

# Enable Buildkit and let compose use it to speed up image building
env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  pull_request:
    branches: ["main"]
    paths-ignore: ["docs/**"]

  push:
    branches: ["main"]
    paths-ignore: ["docs/**"]

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: legadilo
          POSTGRES_USER: django
          POSTGRES_PASSWORD: django_passwd
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    env:
      IS_PRODUCTION: "false"
      PYTHONUNBUFFERED: "1"
      PYTHONDEVMODE: "1"
      USE_DOCKER: "no"
      DATABASE_URL: "postgres://django:django_passwd@localhost:5432/legadilo"

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          # Install a specific version of uv.
          version: "0.7.6"

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install the project
        run: uv sync --dev --locked

      - name: Run pre-commit
        run: uv run pre-commit run -a

      - name: Create cache table
        run: uv run python manage.py createcachetable

      - name: Run DB Migrations
        run: uv run python manage.py migrate

      - name: Run Django Tests
        run: uv run pytest --cov --cov-report term:skip-covered --cov-fail-under=90

      - name: Test build production images
        run: |
          cp -a devops/envs/local devops/envs/production
          docker compose -f production.yml build

      - name: Test production images
        run: docker compose -f production.yml run -e IS_PRODUCTION=true -e DJANGO_SECRET_KEY=ci -e DJANGO_ADMIN_URL=/admin/ django python manage.py check

      - name: Teardown production stack
        run: docker compose -f production.yml down
