# Legadilo
# Copyright (C) 2023-2025 by Legadilo contributors.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Generated by Django 5.1.1 on 2024-10-13 20:21

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("reading", "0007_article_table_of_content"),
    ]

    operations = [
        migrations.CreateModel(
            name="SubTagMapping",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "base_tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sub_tag_mappings",
                        to="reading.tag",
                    ),
                ),
                (
                    "sub_tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="base_tag_mappings",
                        to="reading.tag",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="tag",
            name="sub_tags",
            field=models.ManyToManyField(
                related_name="base_tags", through="reading.SubTagMapping", to="reading.tag"
            ),
        ),
        migrations.AddConstraint(
            model_name="subtagmapping",
            constraint=models.UniqueConstraint(
                models.F("base_tag"),
                models.F("sub_tag"),
                name="reading_subtagmapping_unique_sub_tag_mapping_for_tag",
            ),
        ),
    ]
